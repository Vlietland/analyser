Porting steps:
[Gemini] Prompt 1: What does this program do 'point to main entry point' (I repeatedly requested Gemini to analyse the program)
Result: a full description of the legacy program
[Gpt4o] Prompt 2: Which modern technology alternatives exist for this program?
Result: Based on the shown alternatives I decided to run it as a PWA client side in typescript
[Gpt4o] Prompt 3: Create an clean architecture technology-agnostic directory structure
Result: Created directory structure with clear split in core/renderer/ui
[Gpt4o] Prompt 4: Create all source files within the structure via touch bash command
Result: List with empty source files
[Gpt4o] Prompt 5: In which order can we best port the program
Result: <Rough plan with order core->renderer->UI>
[Gpt4o] Prompt 6: Create animplementation plan with features for the creaton of the core that can be downloaded as a textfile and read by the gemini client ai agent
Result: Detailed plan for the AI agent, including tests (copied in the dir structure)
[Gpt4o] Prompt 7: Please also create a similar plan for the renderer and the UI layer
Result: Detailed plans for the AI agent, including tests (copied in the dir structure)
[Gpt4o] Prompt 8: Please now create a overall plan to bind everything together
Result: Overall plan with links to the detailed plans, all files and overall instructions
[Gpt4o] Prompt 9: Can you write generic coding conventions for the project that I can add to the projectstructure?
Result: Coding conventions that I changed, such as camelCasing instead of kebab-conventions (sorry for that)
[Gpt4o] Prompt 10: Please review and expand these conventions as necessary and generate ESlint and TypeScript configs
Result: Elaborated coding conventions
[Gpt4o] Prompt 11: Please create ESlint/TypeScript/Prettierrc/Vitest/Package and Readme for install
Result: Generated files stored at the (presummably) right places
[Gpt4o] Prompt 12: Please review the right location of all files (included the file tree)
Result: Few files moved to another location
[Gpt4o] Prompt 13: Create a bash script for a pipeline to build, unittest, show test results and start the application in the browser
Result: Bash script in root of the new project
[Gemini] Prompt 14: please read the analyser implementation plan for your instruction, then read the core implementation plan and coding conventions
Result: Information added to the context window
[Gpt-4o] Prompt 15: all files have been added. the AI has read the files and want to start with the implementation of the core/evaluator engine. What do these two files do?
Result: Explanation
[Gemini] <act mode> (let the magic begin)
Result: First source file filled with comments and cryptic code as the original. Therefore updated the coding conventions. Gemini also tried to run a package install but no npm was installed. 
[Gpt4o] ok please create a setup.sh to install the necessary files and dependencies
Result: File with the necessary setup steps, which overlapped with run.sh so adapted it manually to a bare bone setup
[Gemini] I created and ran <this> setup. Please continue.
Result: Created first files which clearly did not adhere to the coding standards. Therefore stopped and....
[Gemini] You created all those comments. Please read again the coding standards and adhere to them closely. Correct all files that you created with these standards.
Result: Files created with minimum comments (still to much but ... pick your battles), however no tests created
[Gemini] Please read again coreImplementationPlan and complete the missed steps
Result: Added tests
[Manual] npx vitest run --reporter verbose, setup.sh and run.sh
Result: Missed installs, manually installed jsdom, cleaned up some npm errors, added index.html and created .gitignore, fixed a few bugs, updated run.sh
[Gemini] now please add the rendering engine by reading the renderenImplementationPlan and again adhere CLOSELY to the coding standards.
Result: Added rendering, AI keeps on adding comments and then removing them
[Gemini] now please add the UI engine by reading the renderenImplementationPlan and again adhere CLOSELY to the coding standards.
Result: Lots of reengineering during this prompt, at the end a working app but shows a black screen.
[Gemini] Main has not yet been created, please read analyserImplementationPlan.txt
Result: Main created, basic working application
------------------------------------------start bugfixing------------------------------
[Gemini] it seems that the stepping mechanism of the button does not work. It seems that the step is directly set without taking into account the present viewstate. there need to be a subtraction and adding mechanism...

















